<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.modu.app.prj.vote.mapper.VoteMapper">
  
 	<!-- 투표 생성 -->
 	<insert id="voteInsert" statementType="CALLABLE">
		call CREATE_VOTE(
				#{chatrNo},	
				#{brdUniNo},
				#{toDt},
				#{ttl},
				#{voteItem,typeHandler=com.modu.app.oracle.OracleArrayHandler},
				#{particiMembUniNo},
				#{prjUniNo}
				)
	</insert>
	
	<!-- 투표리스트 -->
 	<select id="voteList" resultType="VoteVO" parameterType="VoteVO" >
    select DISTINCT e.vote_no,chatr_nm,board_nm,fr_dt,to_dt,ttl,cnt
    from vote e left outer join (
                    	select chatr_nm,c.chat_no
                    	from chat c join (
                                       		 select chatr_nm, a.chatr_no
                                       		 from chatr_partici a join chatr b
                                       		 on a.chatr_no = b.chatr_no
                                      		 where partici_memb_uni_no=#{particiMembUniNo}) d
                    	on c.chatr_no=d.chatr_no) f
  	on e.chat_no =f.chat_no
  			left outer	join (
                        select board_nm,post_uni_no
                        from brd g full outer join post h 
                        on g.brd_uni_no = h.brd_uni_no
                        left outer join brd_cm i on g.brd_uni_no=i.board_uni_no
                            WHERE (g.pubc_yn = 'Y'
    or (g.pubc_yn = 'N' and h.partici_memb_uni_no = #{particiMembUniNo})
    AND g.prj_uni_no = #{prjUniNo})) j
    on e.post_uni_no = j.post_uni_no
    join vote_deta k
    on e.vote_no = k.vote_no
    where e.partici_memb_uni_no = #{particiMembUniNo} 
 	</select>
 	
 	<!-- 투표 제작자 찾기 -->
 	<select id="voteMaker">
 	select partici_memb_uni_no
 	from vote
 	where vote_no=#{voteNo}
 	</select>
 	
	<!--투표 단건 조회 -->
	<select id="oneVote" resultType="VoteVO" parameterType="VoteVO">
	select DISTINCT 
	e.vote_no,
	chatr_nm,
	fr_dt,
	to_dt,
	ttl,
	e.chat_no,
	e.post_uni_no,
	board_Nm,
	brd_uni_no,
	FIND_NICKNAME(#{prjUniNo},#{particiMembUniNo}) particiMembUniNo
    from vote e left outer join (
                    	select chatr_nm,c.chat_no
                    	from chat c  join (
                                       		 select chatr_nm, a.chatr_no
                                       		 from chatr_partici a join chatr b
                                       		 on a.chatr_no = b.chatr_no
                                      		 where partici_memb_uni_no=#{particiMembUniNo}) d
                    	on c.chatr_no=d.chatr_no) f
  	on e.chat_no =f.chat_no
  			left outer	join (
                        select board_nm,post_uni_no,g.brd_uni_no
                        from brd g full outer join post h 
                        on g.brd_uni_no = h.brd_uni_no
                        left outer join brd_cm i on g.brd_uni_no=i.board_uni_no
                            WHERE (g.pubc_yn = 'Y'
    or (g.pubc_yn = 'N' and h.partici_memb_uni_no = #{particiMembUniNo})
    AND g.prj_uni_no = #{prjUniNo})) j
    on e.post_uni_no = j.post_uni_no
    where e.vote_no=#{voteNo}
	</select>
  
	<!-- 투표 항목 나열  -->
  	<select id="voteItem" resultType="VoteDetaVO">
  	select vote_item,cnt,vote_deta_no,vote_no
  	from vote_deta 
  	where vote_no=#{voteNo}
  	</select>
  
  	<!-- 투표 하기 -->
	<insert id="voteDo" parameterType="VoteDetaVO" statementType="CALLABLE">
		call DO_VOTE(
				#{voteNo},
				#{particiMembUniNo},
				#{voteDetaNo}
				)
	</insert>
	
	<!-- 재투표방지 -->
	<select id="whoVote" parameterType="VoteDetaVO" resultType="VoteDetaVO">
	select vote_no,partici_memb_uni_no
	from vote_partici
	where vote_no = #{voteNo} 
	and partici_memb_uni_no=#{particiMembUniNo}
	</select>
	

  <!-- 투표 기간 수정 -->
  <update id="voteDate" parameterType="VoteVO">
  update vote set to_dt=#{toDt}
  where vote_no=#{voteNo}
  </update>
  
  
  <!-- 투표하기 - 채팅방 제목 찾기 -->
  <select id="voteChatr" resultType="VoteVO">
 
  select e.vote_no,chatr_nm
  from vote e join (
                    select chatr_nm,c.chat_no
                    from chat c join (
                                        select chatr_nm, a.chatr_no
                                        from chatr_partici a join chatr b
                                        on a.chatr_no = b.chatr_no) d
                    on c.chatr_no=d.chatr_no) f
  on e.chat_no =f.chat_no
  where vote_no = #{voteNo}
   </select>
  
  <!-- 투표하기 - 게시판 제목 찾기 -->
  <select id="voteBrdNm" resultType="VoteVO">
  select vote_no,board_nm
  from vote c join(
                    select board_nm,post_uni_no
                    from brd a join post b 
                    on a.brd_uni_no = b.brd_uni_no) d
  on c.post_uni_no = d.post_uni_no
  where vote_no = #{voteNo}
  </select>
  
  <!-- 투표 결과 -->
  <select id="voteResult" resultType="VoteVO">
  select vote_item,cnt
  from vote_deta
  where vote_no = #{voteNO}
  </select>
  
  <!-- 투표 단건 -->
  <select id="getVote" resultType="VoteVO">
  select partici_memb_uni_no,fr_dt,to_dt,vote_item,cnt
  from vote a join vote_deta b
  on a.vote_no = b.vote_no
  where vote_no =#{voteNo}
  order by desc
  </select>
  
  <!-- 채팅방 제목 -->
  <select id="chatrNm" resultType="VoteVO" parameterType="VoteVO">
  select chatr_nm, chatr_no
  from chatr_partici
  where partici_memb_uni_no=#{particiMembUniNo}
  </select>
  
  <!-- 게시판 제목 -->
  <select id="brdNm" resultType="VoteVO" parameterType="VoteVO">
  select board_nm from brd
  where patrici_memb_uni_no=#{particiMembUniNo}
  </select>
  

   <!-- 투표 생성 - 1-1. 게시글에 첨가 -->
  <!-- <insert id="postVote" parameterType="VoteVO">
    <selectKey keyProperty="postUniNo" resultType="String" order="BEFORE">
    	SELECT 'pt' || (MAX(TO_NUMBER(SUBSTR(post_uni_no, 3)))+1) FROM post
    </selectKey>
    INSERT INTO post (post_uni_no,
                      brd_uni_no,
                      ttl,
                      cm,
                      partici_memb_uni_no,
                      write_dt,
                      <if test="postTagArm != null and !postTagArm.equals('')">
                      post_tag_arm,
                      </if>
                      noti_yn,
                      reply_arm_yn
                      )
		    VALUES (
		           #{postUniNo},
		           #{brdUniNo},
		           #{ttl},
		           '투표가 등록되었습니다',		          
					#{particiMembUniNo},
		           sysdate,
		           <if test="postTagArm != null and !postTagArm.equals('')">
                   #{postTagArm},
                   </if>
                   'X',      
                   'Y'
		           )
</insert>
  
   투표 생성 - 1-2. 채팅에 첨가 
  <insert id="chatVote" parameterType="VoteVO">
  insert into chat(chat_no,chatr_no,partici_memb_uni_no,cntn)
  values(chat_seq.nextval,#{chatr_no},#{partici_memb_uni_no},#{cntn})  
  </insert>
  
  투표 생성 - 2.투표테이블
  <insert id="createVote" parameterType="VoteVO">
  <selectKey keyProperty="voteNo" order="BEFORE" resultType="String">
		SELECT 'v'||vote_no.nextval
		FROM dual
  </selectKey>
  INSERT INTO VOTE(	vote_no,
  					prj_no,
  					fr_dt,
  					to_dt,
  					ttl,
  					partici_memb_uni_no
  					<if test="postUniNo != null and !postUniNo.equals('')">
                    post_uni_no,
                    </if>
                    <if test="chatNo != null and !chatNo.equals('')">
                    chat_no
                    </if>
                    )                 
  			values(
  					#{voteNo},
  					#{prjUniNo},
  					#{frDt},
  					#{toDt},
  					#{ttl},
  					#{particiMembUniNo},
  					<if test="postUniNo != null and !postUniNo.equals('')">
                    #{postUniNo},
                    </if>
                    <if test="chatNo != null and !chatNo.equals('')">
                    #{chatNo}
                    </if>
                    )
  </insert> -->
  
   <!-- 투표 생성 - 3. 투표상세 테이블 
  <insert id="insertVoteItem" parameterType="VoteVO">
  <selectKey keyProperty="voteDetaNo" order="BEFORE" resultType="String">
		SELECT 'vd'||vote_deta_no.nextval
		FROM dual
  </selectKey>
  insert into vote_deta(vote_deta_no,vote_no,vote_item)
  values(#{voteDetaNo},#{voteNo},#{voteItem})
  </insert>  -->
  
  </mapper>